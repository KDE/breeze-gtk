@charset "UTF-8";

// buttons

@mixin btn-highlight($c) {
	$bg: gtk("@theme_button_background_normal");
	$fg: gtk("@theme_button_foreground_normal");

	background-color: gtkalpha($c, 0.2);
	border-color: gtkmix($c, gtkmix($bg, $fg, 0.333), 0.5);
}

@mixin bg-gradient($bg) {
	background: linear-gradient(
		180deg,
		gtkmix($bg, white, 0.03125) 0%,
		$bg 50%,
		gtkmix($bg, black, 0.03125) 100%
	);
}

// button styles mixin: $t is normal or toolbutton
@mixin neobutton($t) {
	&.suggested-action {
		@include btn-highlight(
			gtk("@theme_button_decoration_focus")
		);
	}
	&.destructive-action {
		@include btn-highlight(gtk("@error_color"));
	}

	@if $t == normal {
		box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.125);
		text-shadow: none;
		-gtk-icon-shadow: none;

		color: gtk("@theme_button_foreground_normal");
		border-color: gtk("@borders");
		@include bg-gradient(
			gtk("@theme_button_background_normal")
		);

		&:backdrop {
			color: gtk("@theme_button_foreground_backdrop");
			border-color: gtk("@unfocused_borders");
			background: gtk("@theme_button_background_backdrop");
		}

		&:checked {
			background: gtkalpha(
				gtk("@theme_button_foreground_normal"),
				0.125
			);
		}

		&:active {
			background: gtkalpha(
				gtk("@theme_button_decoration_hover"),
				0.333
			);
		}

		&:hover {
			border-color: gtk("@theme_button_decoration_hover");
		}

		&:focus {
			border-color: gtk("@theme_button_decoration_focus");
		}

		&:disabled {
			box-shadow: none;
			color: gtk("@theme_button_foreground_insensitive");
			border-color: gtk("@insensitive_borders");
			background: gtk(
				"@theme_button_background_insensitive"
			);

			&:active,
			&:checked {
				color: gtk(
					"@theme_button_foreground_active_insensitive"
				);
			}
		}
	} @else if $t == toolbutton {
		border-color: transparent;
		background: transparent;
		background-color: transparent;
		background-image: none;
		box-shadow: none;
		color: gtk("@theme_button_foreground_normal");

		text-shadow: none;
		-gtk-icon-shadow: none;

		&:checked {
			border-color: gtkmix(
				gtk("@theme_button_background_normal"),
				gtk("@theme_button_foreground_normal"),
				0.3
			);
			background-color: gtkalpha(
				gtk("@theme_button_foreground_normal"),
				0.125
			);
		}

		&:active {
			border-color: gtk("@theme_button_decoration_hover");
			background-color: gtkalpha(
				gtk("@theme_button_decoration_hover"),
				0.333
			);
		}

		&:hover {
			border-color: gtk("@theme_button_decoration_hover");
		}

		&:focus {
			border-color: gtk("@theme_button_decoration_focus");
		}
	}
}

/***********
 * Buttons *
 ***********/

// stuff for .needs-attention
$_dot_color: gtk("@theme_button_decoration_focus");
@keyframes needs_attention {
	from {
		background-image: -gtk-gradient(
			radial,
			center center,
			0,
			center center,
			0.01,
			to($_dot_color),
			to(transparent)
		);
	}
	to {
		background-image: -gtk-gradient(
			radial,
			center center,
			0,
			center center,
			0.5,
			to(gtk("@theme_selected_bg_color")),
			to(transparent)
		);
	}
}

%buttons {
	border: 1px solid;
	border-radius: $r;
	padding: 6px 6px;
	background-clip: border-box;

	@include neobutton(normal);
	&.flat,
	&.image-button {
		@include neobutton(toolbutton);
	}

	separator {
		background-color: transparent;
		background-image: none;
		color: transparent;
	}
}
%button,
button {
	@at-root %button_basic,
		& {
		@extend %buttons;
		&.osd {
			@extend %buttons;
		}
		//overlay / OSD style
		.osd & {
			//@extend %buttons;
		}

		&.image-button {
			min-width: 16px;
			padding: 6px;
		}

		&.text-button {
			padding-left: 6px;
			padding-right: 6px;
		}

		&.text-button.image-button {
			padding-left: 6px;
			padding-right: 6px;
			label {
				padding-left: 6px;
				padding-right: 6px;
			}
		}
		// FIXME
		// &:drop(active) {
		//   color: $drop_target_color;
		//   border-color: $drop_target_color;
		//   box-shadow: inset 0 0 0 1px $drop_target_color;
		// }
	}

	@at-root %button_selected,
		& {
		row:selected & {
			border-color: gtk("@theme_selected_bg_color");

			&.flat:not(:active):not(:checked):not(:hover):not(disabled) {
				color: gtk("@theme_selected_fg_color");
				border-color: transparent;

				&:backdrop {
					color: gtk("@theme_unfocused_selected_fg_color");
				}
			}
		}
	}

	.stack-switcher > & {
		// to position the needs attention dot, padding is added to the button
		// child, a label needs just lateral padding while an icon needs vertical
		// padding added too.
		> label {
			padding-left: 6px; // label padding
			padding-right: 6px; //
		}
		> image {
			padding-left: 6px; // image padding
			padding-right: 6px; //
			padding-top: 3px; //
			padding-bottom: 3px; //
		}
		&.text-button {
			padding: 6px; // needed or it will get overridden
		}
		&.image-button {
			// we want image buttons to have a 1:1 aspect ratio, so compensation
			// of the padding added to the GtkImage is needed
			padding: 3px 0px;
		}
		&.needs-attention > label,
		&.needs-attention > image {
			@extend %needs_attention;
		}
		&.needs-attention:active > label,
		&.needs-attention:active > image,
		&.needs-attention:focus > label,
		&.needs-attention:focus > image,
		&.needs-attention:checked > label,
		&.needs-attention:checked > image {
			animation: none;
			background-image: none;
		}
	}

	//inline-toolbar buttons
	.inline-toolbar &,
	.inline-toolbar &:backdrop {
		border-radius: $r;
		border-width: 1px;
		@extend %linked;
	}

	.primary-toolbar & {
		-gtk-icon-shadow: none;
	}

	.linked > &,
	.linked > &:hover,
	.linked > &:active,
	.linked > &:focus,
	.linked > &:checked,
	.linked > &:backdrop {
		@extend %linked;
	}

	.linked.vertical > &,
	.linked.vertical > &:hover,
	.linked.vertical > &:active,
	.linked.vertical > &:focus,
	.linked.vertical > &:checked,
	.linked.vertical > &:backdrop {
		@extend %linked_vertical;
	}
}

/**************
 * ComboBoxes *
 **************/
combobox {
	arrow {
		-gtk-icon-source: -gtk-icontheme($arrow_down);
		min-height: 16px;
		min-width: 16px;
	}

	button {
		padding-top: 4px;
		padding-bottom: 4px;
	}

	&.linked {
		button:nth-child(2) {
			&:dir(ltr) {
				@extend %linked:last-child;
			}
			&:dir(rtl) {
				@extend %linked:first-child;
			}
		}
	}

	//  &:drop(active) { // FIXME: untested
	//    box-shadow: none;
	//
	//    button.combo { @extend %button_basic:drop(active); }
	//}
}

.linked > combobox > box > button.combo {
	// the combo is a composite widget so the way we do button linking doesn't
	// work, special case needed. See
	// https://bugzilla.gnome.org/show_bug.cgi?id=733979

	&:dir(ltr),
	&:dir(rtl) {
		@extend %linked_middle;
	} // specificity bump
}

.linked:not(.vertical)
	> combobox:first-child
	> box
	> button.combo {
	@extend %linked:first-child;
}
.linked:not(.vertical)
	> combobox:last-child
	> box
	> button.combo {
	@extend %linked:last-child;
}
.linked:not(.vertical)
	> combobox:only-child
	> box
	> button.combo {
	@extend %linked:only-child;
}

.linked.vertical > combobox > box > button.combo {
	@extend %linked_vertical_middle;
}
.linked.vertical
	> combobox:first-child
	> box
	> button.combo {
	@extend %linked_vertical:first-child;
}
.linked.vertical
	> combobox:last-child
	> box
	> button.combo {
	@extend %linked_vertical:last-child;
}
.linked.vertical
	> combobox:only-child
	> box
	> button.combo {
	@extend %linked_vertical:only-child;
}

%needs_attention {
	animation: needs_attention 150ms ease-in;
	$_dot_shadow: gtk("@theme_button_foreground_normal");
	$_dot_shadow_r: 0.5;
	background-image: -gtk-gradient(
			radial,
			center center,
			0,
			center center,
			0.5,
			to($_dot_color),
			to(transparent)
		),
		-gtk-gradient(radial, center center, 0, center center, $_dot_shadow_r, to($_dot_shadow), to(transparent));
	background-size: 6px 6px, 6px 6px;
	background-repeat: no-repeat;
	background-position: right 3px, right 4px;
	&:backdrop {
		background-size: 6px 6px, 0 0;
	}
	&:dir(rtl) {
		background-position: left 3px, left 4px;
	}
}

%linked_middle {
	border-radius: $r;
	&:dir(rtl) {
		border-radius: $r; // needed when including %linked_middle:dir(rtl)
	}
}

%linked {
	margin-left: 2px;
	margin-right: 2px;
	@extend %linked_middle;
	&:first-child {
		border-radius: $r;
		border-style: solid;
	}
	&:last-child {
		border-radius: $r;
		&:dir(rtl) {
		}
	}
	&:only-child {
		border-radius: $r;
		border-style: solid;
	}
}

%linked_vertical_middle {
	border-style: solid;
	border-radius: $r;
}

%linked_vertical {
	@extend %linked_vertical_middle;
	&:first-child {
		border-radius: $r;
	}
	&:last-child {
		border-radius: $r;
		border-style: solid;
	}
	&:only-child {
		border-radius: $r;
		border-style: solid;
	}
}

%undecorated_button {
	border-color: transparent;
	background-color: transparent;
	background-image: none;
	box-shadow: none;
	text-shadow: none;
	-gtk-icon-shadow: none;
}
