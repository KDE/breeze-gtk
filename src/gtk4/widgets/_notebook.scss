@charset "UTF-8";

/*****************
 * Notebooks and *
 * Tabs          *
 *****************/
/*************
  * Notebooks *
  *************/
notebook {
	&.frame {
		border: none;
		padding: 0;
		box-shadow: inset 0 0 0 1px gtk("@borders");
	}

	> header {
		padding: 0;
		border: none;
		background-color: gtk("@theme_bg_color");
		//box-shadow: inset 0 -1px gtk("@borders");

		&.top {
			box-shadow: inset 0 -1px gtk("@borders"); // border
			&:backdrop {
				box-shadow: inset 0 -1px gtk("@unfocused_borders");
			}
		}
		&.bottom {
			box-shadow: inset 0 1px gtk("@borders");
			&:backdrop {
				box-shadow: inset 0 1px gtk("@unfocused_borders");
			}
		}
		&.right {
			box-shadow: inset 1px 0 gtk("@borders");
			&:backdrop {
				box-shadow: inset 1px 0 gtk("@unfocused_borders");
			}
		}
		&.left {
			box-shadow: inset -1px 0 gtk("@borders");
			&:backdrop {
				box-shadow: inset -1px 0 gtk("@unfocused_borders");
			}
		}
		&:backdrop {
			background-color: gtk("@theme_unfocused_bg_color");
		}

		tabs {
			margin: 0;
		}

		@each $_tab, $_border,
			$_radius_first, $_radius_last in (top, bottom, 3px 0 0 0, 0 3px 0 0),
			(bottom, top, 0 0 0 3px, 0 0 3px 0),
			(left, right, 3px 0 0 0, 0 0 0 3px),
			(right, left, 0 3px 0 0, 0 0 3px 0)
		{
			&.#{$_tab} {
				> tabs {
					> tab {
						padding: 1mm 1.5mm;
						padding-bottom: 1.75mm;
						border: 1px
							solid
							transparent;
						border-#{$_border}: none;
						border-#{$_tab}: 3px solid transparent;
						background-color: gtkalpha(
							gtk("@theme_fg_color"),
							0.2
						);
						border-radius: 0;


						&:first-child {
							border-radius: $_radius_first;
						}

						&:last-child {
							border-radius: $_radius_last;
						}

						&:hover,
						&.prelight-page {
							transition: 0.15s;
							background-color: gtkalpha(
								gtk("@theme_selected_bg_color"),
								0.2
							);

						}

						// Padding trickery to get selected tab overlap
						@if $_tab == top or $_tab == bottom {

							> label {
								margin-left: -0.75mm;
							}

							&:checked {
								padding-left: 2.25mm;

								&:not(:first-child) {
									margin-left: -0.75mm;
								}

								&:first-child {
									padding-left: 1.5mm;
								}
								&:not(:last-child) {
									margin-right: -0.75mm;
								}

								& + tab {
									padding-left: 2.25mm;
								}
							}
						} @else {

							> label {
								margin-top: -0.75mm;
							}

							&:checked {
								padding-top: 1.75mm;

								&:not(:first-child) {
									margin-top: -0.75mm;
								}
								&:first-child {
									padding-top: 1mm;
								}
								&:not(:last-child) {
									margin-bottom: -0.75mm;
								}

								& + tab {
									padding-top: 1.75mm;
								}
							}
						}

						&:checked {
							transition: none;
							border-color: gtk("@borders");
							border-#{$_tab}-color: gtk("@theme_selected_bg_color");

							$_radius: ();

							// Combine both first and second radiuses
							@for $i from 1 through length($_radius_first) {
								$_radius: append($_radius, nth($_radius_first, $i) + nth($_radius_last, $i));
							}

							border-radius: $_radius;

							background-color: gtk("@theme_bg_color");
						}
					}

					arrow.down ~ tab:checked:nth-child(2) {
						@if $_tab == top or $_tab == bottom {
							margin-left: 0;
							padding-left: 1.5mm;
						} @else {
							margin-top: 0;
							padding-top: 1mm;
						}
					}

					arrow.down ~ tab:checked:nth-last-child(2) {
						@if $_tab == top or $_tab == bottom {
							margin-right: 0;
						} @else {
							margin-bottom: 0;
						}
					}
				}
			}
		}

		@each $_tab, $_border,
			$_shadow1 in (top, right, -3px 0 0 0),
			(bottom, right, -3px 0 0 0),
			(left, bottom, 0 -3px 0 0),
			(right, bottom, 0 -3px 0 0)
		{
			&.#{$_tab} {
				> tabs {
					> tab {
						&.reorderable-page {
							border-width: 3px;
							border-style: solid;
							border-color: transparent;
							background-color: gtk("@theme_bg_color");
							background-clip: padding-box;
							border-#{$_border}-width: 1px;
							border-#{$_border}-color: gtk("@borders");
							box-shadow: inset
								#{$_shadow1}
								gtk("@theme_bg_color");
							&:hover,
							&.prelight-page {
								box-shadow: inset
										0 -3px
										0
										0
										gtkalpha(
											gtk("@theme_selected_bg_color"),
											0.2
										),
									inset $_shadow1 gtk("@theme_bg_color");
							}
							&:checked {
								box-shadow: inset
										0 -3px
										0
										0
										gtk("@theme_selected_bg_color"),
									inset $_shadow1 gtk("@theme_bg_color");
								&:backdrop {
									background-color: gtk(
										"@theme_unfocused_bg_color"
									);
									border-color: transparent;
									border-#{$_border}-color: gtk(
										"@unfocused_borders"
									);
									box-shadow: none;
								}
							}
							&:backdrop {
								background-color: gtk(
									"@theme_unfocused_bg_color"
								);
								border-#{$_border}-color: gtk(
									"@unfocused_borders"
								);
								box-shadow: none;
							}
						}
					}
				}
			}
		}

		&.top > tabs > arrow {
			@extend %notebook_vert_arrows;

			border-top-style: none;
		}

		&.bottom > tabs > arrow {
			@extend %notebook_vert_arrows;

			border-bottom-style: none;
		}

		@at-root %notebook_vert_arrows {
			margin-left:-1.25mm;
			margin-right:-1.25mm;
			padding-left: 1mm;
			padding-right: 1mm;

			&.down {
				-gtk-icon-source: -gtk-icontheme($arrow_left);
			}

			&.up {
				-gtk-icon-source: -gtk-icontheme($arrow_right);
			}
		}

		&.left > tabs > arrow {
			@extend %notebook_horz_arrows;

			border-left-style: none;
		}

		&.right > tabs > arrow {
			@extend %notebook_horz_arrows;

			border-right-style: none;
		}

		@at-root %notebook_horz_arrows {
			margin-top:-1.25mm;
			margin-bottom:-1.25mm;
			padding-top: 1mm;
			padding-bottom: 1mm;

			&.down {
				-gtk-icon-source: -gtk-icontheme($arrow_up);
			}

			&.up {
				-gtk-icon-source: -gtk-icontheme($arrow_down);
			}
		}

		> tabs > arrow {
			@include neobutton(toolbutton);

			min-height: 4mm;
			min-width: 4mm;
			border-radius: 0;

			&:hover:not(:active):not(:backdrop) {
				background-clip: padding-box;
				background-image: none;
				background-color: transparentize(white, 0.7);
				border-color: transparent;
				box-shadow: none;
			}
		}

		// colors the button like the label, overridden otherwise
		button.flat {
			padding: 0;
			margin: 0.5mm;
			// FIXME: generalize .small-button?
			min-width: 3mm;
			min-height: 3mm;
			border: 0 solid;
			border-radius: 50%;
			color: gtk("@borders");
			background-image: none;

			&:active,
			&:hover{
				color: $error_color;
			}
		}
	}

	> stack:not(:only-child) {
		// the :not(:only-child) is for "hidden" notebooks
		background-color: transparent;
		border-style: solid;
		border-color: gtk("@borders");
		border-width: 0;
	}
}
